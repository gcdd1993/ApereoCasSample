import java.text.SimpleDateFormat

plugins {
    id "org.springframework.boot" version "${spring_boot_version}"
}

if (!System.properties["java.version"].startsWith("11")) {
    throw new RuntimeException("Incompatible JRE version: " + System.properties["java.version"] + ". Use JRE 11 instead.")
}

group = "io.github.gcdd1993"
version root_version

apply plugin: "org.springframework.boot"
apply plugin: "java"

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

jar {
    enabled = true
    manifest {
        attributes(
                "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Built-By": System.properties["user.name"],
                "Build-Timestamp": new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                "Created-By": "Gradle ${gradle.gradleVersion}",
                "Build-Jdk": "${System.properties["java.version"]} (${System.properties["java.vendor"]} ${System.properties["java.vm.version"]})",
                "Build-OS": "${System.properties["os.name"]} ${System.properties["os.arch"]} ${System.properties["os.version"]}"
        )
    }
}

dependencies {
    implementation(platform("org.springframework.boot:spring-boot-dependencies:$spring_boot_version"))
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation("org.springframework.security:spring-security-cas")
    implementation("org.apache.httpcomponents:httpclient:4.5.12")

    testImplementation("org.springframework.boot:spring-boot-starter-test")

    compileOnly("org.projectlombok:lombok:$lombok_version")
    annotationProcessor("org.projectlombok:lombok:$lombok_version")
}

test {
    useJUnitPlatform()
}
